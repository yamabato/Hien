型
int 32bit整数
float 64bit浮動小数点型
string 文字列型
later 式として定義され必要時に実行される
配列
dict
bool


変数
i[int]? その型の初期値で初期化
i[int] <- 0
l[[]int] <- [1, 2, 3]

$から始まるのは言語による変数

定数
const I[int] <- 0
再定義できない

繰り返し
loop times{
    $counter #(0から始まりカウントしていく)
}
break, continueが使える

条件分岐
if or if-else or switch

if condition{
    state
}

switch {
    case i == 0{
        state1
    }
    case i < 0{
        state2
    }
    else{
        state3
    }
}

switch value{
    case 1...3{
       state1
    }
    case 5,7,8{
        state2
    }
    else{
        state3
    }
}

関数定義
func f(a[int], b[int]) -> int{
    return 0
}

func () -> void{
}

i[int] <- f(10,10)

インポート
use io
print@io

標準関数


標準変数
$counter[int] loopでのカウンタ

